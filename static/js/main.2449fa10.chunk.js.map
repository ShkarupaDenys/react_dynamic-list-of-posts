{"version":3,"sources":["types/Error.ts","types/Notif.ts","types/Loading.ts","components/Loader/Loader.tsx","context/PostDetailsContext.tsx","context/UserSelectorContext.tsx","components/UseSelector/components/DropdownItem/DropdownItem.tsx","components/UseSelector/components/DropdownMenu/DropdownMenu.tsx","components/UseSelector/components/DropdownTrigger/DropdownTrigger.tsx","utils/fetchClient.ts","api/posts.ts","components/UseSelector/UserSelector.tsx","api/users.ts","components/Notification/Notification.tsx","components/PostsList/components/PostItem/PostItem.tsx","components/PostsList/PostsList.tsx","api/comments.ts","components/PostDetails/components/Message/Message.tsx","components/PostDetails/components/Comments/Comments.tsx","components/NewCommentForm/components/FieldError/FieldError.tsx","components/NewCommentForm/components/InputField/components/InputFieldIcon/InputFieldIcon.tsx","components/NewCommentForm/components/InputField/InputField.tsx","components/NewCommentForm/components/TextareaField/TextareaField.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","components/Button/Button.tsx","App.tsx","index.tsx"],"names":["Error","Notif","Loading","Loader","_jsx","className","children","defaultValue","post","id","userId","title","body","error","None","loading","comments","setLoading","setComments","setError","PostDetailsContext","createContext","currentUserId","UserSelectorContext","DropdownItem","_ref","name","selectUser","useContext","href","concat","classNames","onClick","DropdownMenu","users","role","map","_ref2","DropdownTrigger","userName","toggleDropdown","_jsxs","type","disabled","GetUsers","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","arguments","length","undefined","data","options","JSON","stringify","headers","then","fetch","response","ok","json","client","getPostsFromServer","UserSelector","_users$find","setPosts","setCurrentPost","setCurrentUserId","_useState","useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","isOpen","setIsOpen","getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","t0","stop","apply","getPosts","_ref3","_callee2","_context2","Posts","GetPosts","finish","_x","useEffect","handleSelect","useCallback","event","trigger","target","closest","item","matches","document","addEventListener","removeEventListener","find","_ref4","Notification","_ref$type","text","dataCy","PostItem","currentPostId","getComments","Button","PostsList","posts","abrupt","Comments","postId","GetComments","Message","comment","removeComment","email","isForm","setIsForm","_useContext","_Fragment","RemoveComment","Danger","_objectSpread","FieldError","hasIcon","hasError","InputFieldIcon","icon","InputField","value","placeholder","onChange","htmlFor","toLowerCase","e","TextareaField","labelText","NewCommentForm","fieldNames","setFieldNames","formData","setFormData","validateForm","form","Object","entries","forEach","oldNames","_toConsumableArray","values","some","handleSubmit","newComment","preventDefault","AddComment","oldComments","oldData","handleOnChange","_defineProperty","includes","filter","clearForm","onSubmit","PostDetails","_ref$disabled","App","_useState5","_useState6","_useState7","_useState8","currentPost","_useState9","_useState10","_useState11","_useState12","isPosts","useMemo","UserSelectorContextValue","PostDetailsContextValue","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2449fa10.chunk.js","sourcesContent":["export enum Error {\n  None = '',\n  GetUsers = 'get users',\n  GetPosts = 'get posts',\n  GetComments = 'get comments',\n  RemoveComment = 'remove comments',\n  AddComment = 'add comments',\n}\n","export enum Notif {\n  Danger = 'danger',\n  Warning = 'warning',\n}\n","export enum Loading {\n  None,\n  Comments,\n  Posts,\n  AddComment,\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Dispatch, SetStateAction, createContext } from 'react';\nimport {\n  Loading,\n  Error,\n  Comment,\n  Post,\n} from '../types';\n\ninterface ContextType {\n  post: Post | null;\n  error: Error;\n  loading: Loading;\n  comments: Comment[];\n  setLoading: (loading: Loading) => void;\n  setComments: Dispatch<SetStateAction<Comment[]>>\n  setError: (error: Error) => void;\n}\n\nconst defaultValue = {\n  post: {\n    id: 0,\n    userId: 0,\n    title: '',\n    body: '',\n  },\n  error: Error.None,\n  loading: Loading.None,\n  comments: [],\n  setLoading: () => {},\n  setComments: () => {},\n  setError: () => {},\n};\n\nexport const PostDetailsContext = createContext<ContextType>(defaultValue);\n","import { createContext } from 'react';\nimport { Error } from '../types/Error';\n\ninterface ContextType {\n  currentUserId: number,\n  error: Error;\n}\n\nconst defaultValue = {\n  currentUserId: 0,\n  error: Error.None,\n};\n\nexport const UserSelectorContext = createContext<ContextType>(defaultValue);\n","import classNames from 'classnames';\nimport { FC, useContext } from 'react';\nimport { UserSelectorContext } from '../../../../context';\nimport { DropdownItemProps } from '../../../../types';\n\nexport const DropdownItem: FC<DropdownItemProps> = ({\n  id,\n  name,\n  selectUser,\n}) => {\n  const { currentUserId } = useContext(UserSelectorContext);\n\n  return (\n    <a\n      href={`#user-${id}`}\n      className={classNames('dropdown-item', {\n        'is-active': currentUserId === id,\n      })}\n      onClick={() => selectUser(id)}\n    >\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport { DropdownItem } from '../DropdownItem';\nimport { DropdownMenuProps } from '../../../../types';\n\nexport const DropdownMenu: FC<DropdownMenuProps> = ({\n  users,\n  selectUser,\n}) => (\n  <div\n    role=\"menu\"\n    id=\"dropdown-menu\"\n    className=\"dropdown-menu\"\n  >\n    <div className=\"dropdown-content\">\n      {users.map(({ id, name }) => (\n        <DropdownItem\n          key={id}\n          id={id}\n          name={name}\n          selectUser={selectUser}\n        />\n      ))}\n    </div>\n  </div>\n);\n","import { FC, useContext } from 'react';\nimport { Error, DropdownTriggerProps } from '../../../../types';\nimport { UserSelectorContext } from '../../../../context';\n\nexport const DropdownTrigger: FC<DropdownTriggerProps> = ({\n  userName,\n  toggleDropdown,\n}) => {\n  const { error } = useContext(UserSelectorContext);\n\n  return (\n    <div className=\"dropdown-trigger\">\n      <button\n        type=\"button\"\n        className=\"button\"\n        aria-haspopup=\"true\"\n        aria-controls=\"dropdown-menu\"\n        onClick={toggleDropdown}\n        disabled={error === Error.GetUsers}\n      >\n        <span>{userName || 'Choose a user'}</span>\n\n        <span className=\"icon is-small\">\n          <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n        </span>\n      </button>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Post } from '../types/index';\nimport { client } from '../utils/fetchClient';\n\nexport const getPostsFromServer = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n","import {\n  useState,\n  useContext,\n  useEffect,\n  useCallback,\n} from 'react';\nimport classNames from 'classnames';\nimport { DropdownMenu, DropdownTrigger } from './components';\nimport { UserSelectorContext } from '../../context';\nimport {\n  User,\n  Error,\n  Loading,\n  UserSelectorProps,\n} from '../../types';\nimport { getUsersFromServer, getPostsFromServer } from '../../api';\n\nexport const UserSelector: React.FC<UserSelectorProps> = ({\n  setError,\n  setPosts,\n  setLoading,\n  setCurrentPost,\n  setCurrentUserId,\n}) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const { currentUserId } = useContext(UserSelectorContext);\n\n  const getUsers = async () => {\n    try {\n      const data = await getUsersFromServer();\n\n      setUsers(data);\n    } catch {\n      setError(Error.GetUsers);\n    }\n  };\n\n  const getPosts = async (userId: number) => {\n    setLoading(Loading.Posts);\n    setError(Error.None);\n    setCurrentPost(null);\n\n    try {\n      const data = await getPostsFromServer(userId);\n\n      setPosts(data);\n    } catch {\n      setError(Error.GetPosts);\n    } finally {\n      setLoading(Loading.None);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleSelect = useCallback(event => {\n    const trigger = event.target.closest('.dropdown-trigger');\n    const item = event.target.matches('.dropdown-item');\n\n    if (!isOpen) {\n      return;\n    }\n\n    if (trigger || item) {\n      return;\n    }\n\n    setIsOpen(false);\n  }, [isOpen]);\n\n  useEffect(() => {\n    document.addEventListener('click', handleSelect);\n\n    return () => {\n      document.removeEventListener('click', handleSelect);\n    };\n  }, [isOpen]);\n\n  const selectUser = (id: number) => {\n    setCurrentUserId(id);\n    getPosts(id);\n    setIsOpen(false);\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  const userName = users.find(({ id }) => id === currentUserId)?.name;\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', { 'is-active': isOpen })}\n    >\n\n      <DropdownTrigger\n        userName={userName || ''}\n        toggleDropdown={toggleDropdown}\n      />\n\n      <DropdownMenu\n        users={users}\n        selectUser={selectUser}\n      />\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsersFromServer = () => {\n  return client.get<User[]>('/users');\n};\n","import { FC } from 'react';\nimport { NotificationProps } from '../../types';\n\nexport const Notification: FC<NotificationProps> = ({\n  type = 'warning',\n  text,\n  dataCy,\n}) => (\n  <div\n    className={`notification is-${type}`}\n    data-cy={dataCy}\n  >\n    {text}\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Button } from '../../../index';\nimport { PostItemProps } from '../../../../types';\n\nexport const PostItem: FC<PostItemProps> = ({\n  post,\n  currentPostId,\n  getComments,\n}) => (\n  <tr data-cy=\"Post\">\n    <td data-cy=\"PostId\">{post.id}</td>\n\n    <td data-cy=\"PostTitle\">\n      {post.title}\n    </td>\n\n    <td className=\"has-text-right is-vcentered\">\n      <Button\n        type=\"button\"\n        dataCy=\"PostButton\"\n        className={classNames({ 'is-light': currentPostId !== post.id })}\n        onClick={() => getComments(post)}\n      >\n        {currentPostId !== post.id ? 'Open' : 'Close'}\n      </Button>\n    </td>\n  </tr>\n);\n","import { PostItem } from './components/PostItem';\nimport {\n  Loading,\n  Post,\n  Error,\n  PostsListProps,\n} from '../../types';\nimport { getCommentsFromServer } from '../../api';\n\nexport const PostsList: React.FC<PostsListProps> = ({\n  posts,\n  currentPostId,\n  setCurrentPost,\n  setLoading,\n  setComments,\n  setError,\n}) => {\n  const getComments = async (post: Post) => {\n    if (currentPostId === post.id) {\n      setCurrentPost(null);\n\n      return;\n    }\n\n    setLoading(Loading.Comments);\n    setCurrentPost(post);\n\n    try {\n      const data = await getCommentsFromServer(post.id);\n\n      setComments(data);\n    } catch {\n      setError(Error.GetComments);\n    } finally {\n      setLoading(Loading.None);\n    }\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <PostItem\n              post={post}\n              key={post.id}\n              currentPostId={currentPostId}\n              getComments={getComments}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Comment } from '../types/index';\n\nexport const getCommentsFromServer = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const removeCommentOnServer = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n\nexport const addCommentOnServer = (\n  data: Omit<Comment, 'id'>,\n):Promise<Comment> => {\n  return client.post('/comments', data);\n};\n","import { MessageProps } from '../../../../types';\n\nexport const Message: React.FC<MessageProps> = ({\n  comment,\n  removeComment,\n}) => (\n  <article className=\"message is-small\" data-cy=\"Comment\">\n    <div className=\"message-header\">\n      <a\n        href={`mailto:${comment.email}`}\n        data-cy=\"CommentAuthor\"\n      >\n        {comment.name}\n      </a>\n      <button\n        type=\"button\"\n        data-cy=\"CommentDelete\"\n        aria-label=\"delete\"\n        className=\"delete is-small\"\n        onClick={() => removeComment(comment.id)}\n      />\n    </div>\n\n    <div className=\"message-body\" data-cy=\"CommentBody\">\n      {comment.body}\n    </div>\n  </article>\n);\n","import { FC, useContext, useEffect } from 'react';\nimport { Message } from '../Message';\nimport { Notif, Error, CommentsProps } from '../../../../types';\nimport { Button, Notification } from '../../../index';\nimport { PostDetailsContext } from '../../../../context';\n\nexport const Comments: FC<CommentsProps> = ({\n  isForm,\n  setIsForm,\n  removeComment,\n}) => {\n  const { error, comments } = useContext(PostDetailsContext);\n\n  useEffect(() => () => setIsForm(false), []);\n\n  const showForm = () => setIsForm(true);\n\n  return (\n    <>\n      {!comments.length ? (\n        <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n          No comments yet\n        </p>\n      ) : (\n        <>\n          <p className=\"title is-4\">Comments:</p>\n\n          {error === Error.RemoveComment && (\n            <Notification type={Notif.Danger} text=\"Something went wrong!\" />\n          )}\n\n          {comments.map(comment => (\n            <Message\n              key={comment.id}\n              comment={{ ...comment }}\n              removeComment={removeComment}\n            />\n          ))}\n        </>\n      )}\n\n      {!isForm && (\n        <Button dataCy=\"WriteCommentButton\" onClick={showForm}>\n          Write a comment\n        </Button>\n      )}\n    </>\n  );\n};\n","import { FieldErrorProps } from '../../../../types';\n\nexport const FieldError: React.FC<FieldErrorProps> = ({\n  name,\n  hasIcon,\n  hasError,\n}) => {\n  if (!hasError) {\n    return null;\n  }\n\n  return (\n    <>\n      {hasIcon && (\n        <span\n          className=\"icon is-small is-right has-text-danger\"\n          data-cy=\"ErrorIcon\"\n        >\n          <i className=\"fas fa-exclamation-triangle\" />\n        </span>\n      )}\n      <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n        {name === 'Body' ? 'Enter some text' : `${name} is required`}\n      </p>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { InputFieldIconProps } from '../../../../../../types';\n\nexport const InputFieldIcon: FC<InputFieldIconProps> = ({ icon }) => (\n  <span className=\"icon is-small is-left\">\n    <i className={`fas fa-${icon}`} />\n  </span>\n);\n","import classNames from 'classnames';\nimport { FieldError } from '../FieldError';\nimport { InputFieldIcon } from './components/InputFieldIcon';\nimport { InputFieldProps } from '../../../../types';\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  id,\n  icon,\n  name,\n  value,\n  hasError,\n  placeholder,\n  onChange,\n}) => (\n  <div className=\"field\" data-cy={`${name}Field`}>\n    <label className=\"label\" htmlFor={id}>\n      {`Author ${name}`}\n    </label>\n\n    <div className=\"control has-icons-left has-icons-right\">\n      <input\n        type=\"text\"\n        name={name.toLowerCase()}\n        id={id}\n        value={value}\n        placeholder={placeholder}\n        className={classNames('input', { 'is-danger': hasError })}\n        onChange={(e) => onChange(name.toLowerCase(), e.target.value)}\n      />\n\n      <InputFieldIcon icon={icon} />\n\n      <FieldError\n        hasIcon\n        name={name}\n        hasError={hasError}\n      />\n    </div>\n  </div>\n);\n","import classNames from 'classnames';\nimport { FieldError } from '../FieldError';\nimport { TextareaFieldProps } from '../../../../types';\n\nexport const TextareaField: React.FC<TextareaFieldProps> = ({\n  id,\n  name,\n  value,\n  hasError,\n  labelText,\n  placeholder,\n  onChange,\n}) => (\n  <div className=\"field\" data-cy={`${name}Field`}>\n    <label className=\"label\" htmlFor={id}>\n      {labelText}\n    </label>\n\n    <div className=\"control\">\n      <textarea\n        id={id}\n        value={value}\n        name={name.toLowerCase()}\n        placeholder={placeholder}\n        className={classNames('textarea', { 'is-danger': hasError })}\n        onChange={(e) => onChange(name.toLowerCase(), e.target.value)}\n      />\n    </div>\n\n    <FieldError name={name} hasError={hasError} />\n  </div>\n);\n","import { useCallback, useContext, useState } from 'react';\nimport { InputField, TextareaField } from './components';\nimport { Button } from '../index';\nimport {\n  Error,\n  Loading,\n  FormSubmit,\n  CommentData,\n} from '../../types';\nimport { addCommentOnServer } from '../../api';\nimport { PostDetailsContext } from '../../context';\n\nexport const NewCommentForm: React.FC = () => {\n  const [fieldNames, setFieldNames] = useState<string[]>([]);\n  const [formData, setFormData] = useState({ name: '', email: '', body: '' });\n  const {\n    post,\n    loading,\n    setError,\n    setLoading,\n    setComments,\n  } = useContext(PostDetailsContext);\n\n  const validateForm = useCallback((form: CommentData) => {\n    Object.entries(form).forEach((item) => {\n      if (!item[1]) {\n        setFieldNames((oldNames) => [...oldNames, item[0]]);\n      }\n    });\n\n    const values = Object.values(form);\n\n    return values.some(value => !value.length);\n  }, [fieldNames]);\n\n  const handleSubmit = useCallback(async (e: FormSubmit) => {\n    e.preventDefault();\n\n    const isValid = validateForm(formData);\n\n    if (isValid) {\n      return;\n    }\n\n    setLoading(Loading.AddComment);\n\n    try {\n      const newComment = await addCommentOnServer(\n        { ...formData, postId: post?.id || 0 },\n      );\n\n      setComments(oldComments => [...oldComments, newComment]);\n    } catch {\n      setError(Error.AddComment);\n    } finally {\n      setLoading(Loading.None);\n    }\n\n    setFormData(oldData => Object({ ...oldData, body: '' }));\n  }, [fieldNames, formData]);\n\n  const handleOnChange = (name: string, value: string) => {\n    setFormData(oldData => Object({ ...oldData, [name]: value }));\n\n    const isError = fieldNames.includes(name);\n\n    if (!isError) {\n      return;\n    }\n\n    setFieldNames(oldNames => oldNames.filter(item => item !== name));\n  };\n\n  const clearForm = useCallback(() => {\n    setFormData({ name: '', email: '', body: '' });\n    setFieldNames([]);\n  }, [formData]);\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <InputField\n        id=\"comment-author-name\"\n        name=\"Name\"\n        icon=\"user\"\n        value={formData.name}\n        placeholder=\"Name Surname\"\n        hasError={fieldNames.includes('name')}\n        onChange={handleOnChange}\n      />\n\n      <InputField\n        id=\"comment-author-email\"\n        name=\"Email\"\n        icon=\"envelope\"\n        value={formData.email}\n        placeholder=\"email@test.com\"\n        hasError={fieldNames.includes('email')}\n        onChange={handleOnChange}\n      />\n\n      <TextareaField\n        id=\"comment-body\"\n        name=\"Body\"\n        value={formData.body}\n        labelText=\"Enter some text\"\n        placeholder=\"Type comment here\"\n        hasError={fieldNames.includes('body')}\n        onChange={handleOnChange}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n\n          <Button\n            type=\"submit\"\n            loading={loading === Loading.AddComment}\n          >\n            Add\n          </Button>\n        </div>\n\n        <div className=\"control\">\n          <Button\n            type=\"reset\"\n            className=\"is-light\"\n            onClick={clearForm}\n          >\n            Clear\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useContext, useState } from 'react';\nimport { Notif, Error, Loading } from '../../types';\nimport { Comments } from './components/Comments';\nimport { Loader, Notification } from '../index';\nimport { removeCommentOnServer } from '../../api';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { PostDetailsContext } from '../../context';\n\nexport const PostDetails: React.FC = () => {\n  const {\n    post,\n    error,\n    loading,\n    setComments,\n    setError,\n  } = useContext(PostDetailsContext);\n\n  const [isForm, setIsForm] = useState(false);\n\n  const removeComment = async (id: number) => {\n    setComments((oldComments) => {\n      return oldComments.filter(comment => comment.id !== id);\n    });\n\n    try {\n      await removeCommentOnServer(id);\n    } catch {\n      setError(Error.RemoveComment);\n    }\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"block\">\n        <h2 data-cy=\"PostTitle\">\n          {`#${post?.id}: ${post?.title}`}\n        </h2>\n\n        <p data-cy=\"PostBody\">\n          {post?.body}\n        </p>\n      </div>\n\n      <div className=\"block\">\n        {loading === Loading.Comments ? (\n          <Loader />\n        ) : (\n          <>\n            {error === Error.GetComments ? (\n              <Notification\n                type={Notif.Danger}\n                dataCy=\"CommentsError\"\n                text=\"Something went wrong\"\n              />\n            ) : (\n              <Comments\n                isForm={isForm}\n                setIsForm={setIsForm}\n                removeComment={removeComment}\n              />\n            )}\n          </>\n        )}\n      </div>\n\n      {(isForm && post) && <NewCommentForm />}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { ButtonProps } from '../../types';\n\nexport const Button: React.FC<ButtonProps> = ({\n  type = 'button',\n  loading,\n  dataCy,\n  className,\n  disabled = false,\n  children,\n  onClick,\n}) => (\n  <button\n    // eslint-disable-next-line react/button-has-type\n    type={type}\n    data-cy={dataCy}\n    className={classNames(\n      'button is-link',\n      className,\n      { 'is-loading': loading },\n    )}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n","import React, { useMemo, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport {\n  Loader,\n  PostsList,\n  PostDetails,\n  UserSelector,\n  Notification,\n} from './components';\n\nimport {\n  Post,\n  Notif,\n  Error,\n  Loading,\n  Comment,\n} from './types';\nimport { UserSelectorContext, PostDetailsContext } from './context';\n\nexport const App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [currentPost, setCurrentPost] = useState<Post | null>(null);\n  const [error, setError] = useState(Error.None);\n  const [loading, setLoading] = useState(Loading.None);\n\n  const isPosts = useMemo(\n    () => !posts.length && !!currentUserId && !loading && !error,\n    [posts, currentUserId, loading],\n  );\n\n  const UserSelectorContextValue = useMemo(() => Object({\n    error, currentUserId,\n  }), [error, currentUserId]);\n\n  const PostDetailsContextValue = useMemo(() => Object({\n    post: currentPost,\n    error,\n    loading,\n    comments,\n    setLoading,\n    setComments,\n    setError,\n  }), [currentPost, error, loading, comments]);\n\n  return (\n    <main className=\"section\" aria-hidden=\"true\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelectorContext.Provider value={UserSelectorContextValue}>\n                  <UserSelector\n                    setError={setError}\n                    setLoading={setLoading}\n                    setPosts={setPosts}\n                    setCurrentPost={setCurrentPost}\n                    setCurrentUserId={setCurrentUserId}\n                  />\n                </UserSelectorContext.Provider>\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!currentUserId && error !== Error.GetUsers && (\n                  <p data-cy=\"NoSelectedUser\">No user selected</p>\n                )}\n\n                {loading === Loading.Posts && <Loader />}\n\n                {error === Error.GetPosts && (\n                  <Notification\n                    type={Notif.Danger}\n                    dataCy=\"PostsLoadingError\"\n                    text=\"Something went wrong!\"\n                  />\n                )}\n\n                {isPosts && (\n                  <Notification dataCy=\"NoPostsYet\" text=\"No posts yet\" />\n                )}\n\n                {posts.length > 0 && loading !== Loading.Posts && (\n                  <PostsList\n                    currentPostId={currentPost?.id || 0}\n                    posts={posts}\n                    setCurrentPost={setCurrentPost}\n                    setLoading={setLoading}\n                    setComments={setComments}\n                    setError={setError}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': !!currentPost },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {!!currentPost && (\n                <PostDetailsContext.Provider value={PostDetailsContextValue}>\n                  <PostDetails />\n                </PostDetailsContext.Provider>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}